/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.argus.oth.cases.management.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Authorization service. Represents a row in the &quot;OTH_Authorization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.argus.oth.cases.management.model.impl.AuthorizationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.argus.oth.cases.management.model.impl.AuthorizationImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Authorization
 * @generated
 */
@ProviderType
public interface AuthorizationModel
	extends BaseModel<Authorization>, ShardedModel, StagedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a authorization model instance should use the {@link Authorization} interface instead.
	 */

	/**
	 * Returns the primary key of this authorization.
	 *
	 * @return the primary key of this authorization
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this authorization.
	 *
	 * @param primaryKey the primary key of this authorization
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this authorization.
	 *
	 * @return the uuid of this authorization
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this authorization.
	 *
	 * @param uuid the uuid of this authorization
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the authorization ID of this authorization.
	 *
	 * @return the authorization ID of this authorization
	 */
	public long getAuthorizationId();

	/**
	 * Sets the authorization ID of this authorization.
	 *
	 * @param authorizationId the authorization ID of this authorization
	 */
	public void setAuthorizationId(long authorizationId);

	/**
	 * Returns the group ID of this authorization.
	 *
	 * @return the group ID of this authorization
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this authorization.
	 *
	 * @param groupId the group ID of this authorization
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this authorization.
	 *
	 * @return the company ID of this authorization
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this authorization.
	 *
	 * @param companyId the company ID of this authorization
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this authorization.
	 *
	 * @return the create date of this authorization
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this authorization.
	 *
	 * @param createDate the create date of this authorization
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this authorization.
	 *
	 * @return the modified date of this authorization
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this authorization.
	 *
	 * @param modifiedDate the modified date of this authorization
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the modified user ID of this authorization.
	 *
	 * @return the modified user ID of this authorization
	 */
	public long getModifiedUserId();

	/**
	 * Sets the modified user ID of this authorization.
	 *
	 * @param modifiedUserId the modified user ID of this authorization
	 */
	public void setModifiedUserId(long modifiedUserId);

	/**
	 * Returns the modified user uuid of this authorization.
	 *
	 * @return the modified user uuid of this authorization
	 */
	public String getModifiedUserUuid();

	/**
	 * Sets the modified user uuid of this authorization.
	 *
	 * @param modifiedUserUuid the modified user uuid of this authorization
	 */
	public void setModifiedUserUuid(String modifiedUserUuid);

	/**
	 * Returns the case ID of this authorization.
	 *
	 * @return the case ID of this authorization
	 */
	public long getCaseId();

	/**
	 * Sets the case ID of this authorization.
	 *
	 * @param caseId the case ID of this authorization
	 */
	public void setCaseId(long caseId);

	/**
	 * Returns the external authorization ID of this authorization.
	 *
	 * @return the external authorization ID of this authorization
	 */
	public long getExternalAuthorizationId();

	/**
	 * Sets the external authorization ID of this authorization.
	 *
	 * @param externalAuthorizationId the external authorization ID of this authorization
	 */
	public void setExternalAuthorizationId(long externalAuthorizationId);

	/**
	 * Returns the member ID of this authorization.
	 *
	 * @return the member ID of this authorization
	 */
	public long getMemberId();

	/**
	 * Sets the member ID of this authorization.
	 *
	 * @param memberId the member ID of this authorization
	 */
	public void setMemberId(long memberId);

	/**
	 * Returns the description of this authorization.
	 *
	 * @return the description of this authorization
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this authorization.
	 *
	 * @param description the description of this authorization
	 */
	public void setDescription(String description);

	/**
	 * Returns the rtc authorization status of this authorization.
	 *
	 * @return the rtc authorization status of this authorization
	 */
	@AutoEscape
	public String getRtcAuthorizationStatus();

	/**
	 * Sets the rtc authorization status of this authorization.
	 *
	 * @param rtcAuthorizationStatus the rtc authorization status of this authorization
	 */
	public void setRtcAuthorizationStatus(String rtcAuthorizationStatus);

	/**
	 * Returns the auth status of this authorization.
	 *
	 * @return the auth status of this authorization
	 */
	@AutoEscape
	public String getAuthStatus();

	/**
	 * Sets the auth status of this authorization.
	 *
	 * @param authStatus the auth status of this authorization
	 */
	public void setAuthStatus(String authStatus);

	/**
	 * Returns the status change date of this authorization.
	 *
	 * @return the status change date of this authorization
	 */
	public Date getStatusChangeDate();

	/**
	 * Sets the status change date of this authorization.
	 *
	 * @param statusChangeDate the status change date of this authorization
	 */
	public void setStatusChangeDate(Date statusChangeDate);

	/**
	 * Returns the received date of this authorization.
	 *
	 * @return the received date of this authorization
	 */
	public Date getReceivedDate();

	/**
	 * Sets the received date of this authorization.
	 *
	 * @param receivedDate the received date of this authorization
	 */
	public void setReceivedDate(Date receivedDate);

	/**
	 * Returns the auth number of this authorization.
	 *
	 * @return the auth number of this authorization
	 */
	@AutoEscape
	public String getAuthNumber();

	/**
	 * Sets the auth number of this authorization.
	 *
	 * @param authNumber the auth number of this authorization
	 */
	public void setAuthNumber(String authNumber);

	/**
	 * Returns the category of this authorization.
	 *
	 * @return the category of this authorization
	 */
	@AutoEscape
	public String getCategory();

	/**
	 * Sets the category of this authorization.
	 *
	 * @param category the category of this authorization
	 */
	public void setCategory(String category);

	/**
	 * Returns the rtc authorization type of this authorization.
	 *
	 * @return the rtc authorization type of this authorization
	 */
	@AutoEscape
	public String getRtcAuthorizationType();

	/**
	 * Sets the rtc authorization type of this authorization.
	 *
	 * @param rtcAuthorizationType the rtc authorization type of this authorization
	 */
	public void setRtcAuthorizationType(String rtcAuthorizationType);

	/**
	 * Returns the facility of this authorization.
	 *
	 * @return the facility of this authorization
	 */
	@AutoEscape
	public String getFacility();

	/**
	 * Sets the facility of this authorization.
	 *
	 * @param facility the facility of this authorization
	 */
	public void setFacility(String facility);

	/**
	 * Returns the procedure code of this authorization.
	 *
	 * @return the procedure code of this authorization
	 */
	@AutoEscape
	public String getProcedureCode();

	/**
	 * Sets the procedure code of this authorization.
	 *
	 * @param procedureCode the procedure code of this authorization
	 */
	public void setProcedureCode(String procedureCode);

	/**
	 * Returns the comments of this authorization.
	 *
	 * @return the comments of this authorization
	 */
	@AutoEscape
	public String getComments();

	/**
	 * Sets the comments of this authorization.
	 *
	 * @param comments the comments of this authorization
	 */
	public void setComments(String comments);

	/**
	 * Returns the external modified date of this authorization.
	 *
	 * @return the external modified date of this authorization
	 */
	public Date getExternalModifiedDate();

	/**
	 * Sets the external modified date of this authorization.
	 *
	 * @param externalModifiedDate the external modified date of this authorization
	 */
	public void setExternalModifiedDate(Date externalModifiedDate);

	/**
	 * Returns the effective from of this authorization.
	 *
	 * @return the effective from of this authorization
	 */
	public Date getEffectiveFrom();

	/**
	 * Sets the effective from of this authorization.
	 *
	 * @param effectiveFrom the effective from of this authorization
	 */
	public void setEffectiveFrom(Date effectiveFrom);

	/**
	 * Returns the effective thru of this authorization.
	 *
	 * @return the effective thru of this authorization
	 */
	public Date getEffectiveThru();

	/**
	 * Sets the effective thru of this authorization.
	 *
	 * @param effectiveThru the effective thru of this authorization
	 */
	public void setEffectiveThru(Date effectiveThru);

	/**
	 * Returns the process status of this authorization.
	 *
	 * @return the process status of this authorization
	 */
	@AutoEscape
	public String getProcessStatus();

	/**
	 * Sets the process status of this authorization.
	 *
	 * @param processStatus the process status of this authorization
	 */
	public void setProcessStatus(String processStatus);

	/**
	 * Returns the failure description of this authorization.
	 *
	 * @return the failure description of this authorization
	 */
	@AutoEscape
	public String getFailureDescription();

	/**
	 * Sets the failure description of this authorization.
	 *
	 * @param failureDescription the failure description of this authorization
	 */
	public void setFailureDescription(String failureDescription);

	/**
	 * Returns the row processed of this authorization.
	 *
	 * @return the row processed of this authorization
	 */
	@AutoEscape
	public String getRowProcessed();

	/**
	 * Sets the row processed of this authorization.
	 *
	 * @param rowProcessed the row processed of this authorization
	 */
	public void setRowProcessed(String rowProcessed);

}