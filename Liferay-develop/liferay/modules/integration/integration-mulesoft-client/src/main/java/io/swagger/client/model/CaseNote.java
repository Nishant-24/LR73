/*
 * argus-case-eapi
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Type3;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * CaseNote
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-08T09:53:19.606-08:00")



public class CaseNote {
  @SerializedName("caseId")
  private BigDecimal caseId = null;

  @SerializedName("noteId")
  private BigDecimal noteId = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("noteType")
  private Type3 noteType = null;

  @SerializedName("noteCreatedDate")
  private String noteCreatedDate = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("noteAuthor")
  private String noteAuthor = null;

  @SerializedName("direction")
  private String direction = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("caller")
  private String caller = null;

  @SerializedName("callee")
  private String callee = null;

  @SerializedName("createdDateTime")
  private String createdDateTime = null;

  @SerializedName("modifiedDateTime")
  private String modifiedDateTime = null;

  public CaseNote caseId(BigDecimal caseId) {
    this.caseId = caseId;
    return this;
  }

   /**
   * Get caseId
   * @return caseId
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getCaseId() {
    return caseId;
  }

  public void setCaseId(BigDecimal caseId) {
    this.caseId = caseId;
  }

  public CaseNote noteId(BigDecimal noteId) {
    this.noteId = noteId;
    return this;
  }

   /**
   * Get noteId
   * @return noteId
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getNoteId() {
    return noteId;
  }

  public void setNoteId(BigDecimal noteId) {
    this.noteId = noteId;
  }

  public CaseNote type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CaseNote noteType(Type3 noteType) {
    this.noteType = noteType;
    return this;
  }

   /**
   * Get noteType
   * @return noteType
  **/
  @ApiModelProperty(value = "")
  public Type3 getNoteType() {
    return noteType;
  }

  public void setNoteType(Type3 noteType) {
    this.noteType = noteType;
  }

  public CaseNote noteCreatedDate(String noteCreatedDate) {
    this.noteCreatedDate = noteCreatedDate;
    return this;
  }

   /**
   * Get noteCreatedDate
   * @return noteCreatedDate
  **/
  @ApiModelProperty(value = "")
  public String getNoteCreatedDate() {
    return noteCreatedDate;
  }

  public void setNoteCreatedDate(String noteCreatedDate) {
    this.noteCreatedDate = noteCreatedDate;
  }

  public CaseNote note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public CaseNote noteAuthor(String noteAuthor) {
    this.noteAuthor = noteAuthor;
    return this;
  }

   /**
   * Get noteAuthor
   * @return noteAuthor
  **/
  @ApiModelProperty(value = "")
  public String getNoteAuthor() {
    return noteAuthor;
  }

  public void setNoteAuthor(String noteAuthor) {
    this.noteAuthor = noteAuthor;
  }

  public CaseNote direction(String direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @ApiModelProperty(value = "")
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }

  public CaseNote code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(value = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public CaseNote caller(String caller) {
    this.caller = caller;
    return this;
  }

   /**
   * Get caller
   * @return caller
  **/
  @ApiModelProperty(value = "")
  public String getCaller() {
    return caller;
  }

  public void setCaller(String caller) {
    this.caller = caller;
  }

  public CaseNote callee(String callee) {
    this.callee = callee;
    return this;
  }

   /**
   * Get callee
   * @return callee
  **/
  @ApiModelProperty(value = "")
  public String getCallee() {
    return callee;
  }

  public void setCallee(String callee) {
    this.callee = callee;
  }

  public CaseNote createdDateTime(String createdDateTime) {
    this.createdDateTime = createdDateTime;
    return this;
  }

   /**
   * Get createdDateTime
   * @return createdDateTime
  **/
  @ApiModelProperty(value = "")
  public String getCreatedDateTime() {
    return createdDateTime;
  }

  public void setCreatedDateTime(String createdDateTime) {
    this.createdDateTime = createdDateTime;
  }

  public CaseNote modifiedDateTime(String modifiedDateTime) {
    this.modifiedDateTime = modifiedDateTime;
    return this;
  }

   /**
   * Get modifiedDateTime
   * @return modifiedDateTime
  **/
  @ApiModelProperty(value = "")
  public String getModifiedDateTime() {
    return modifiedDateTime;
  }

  public void setModifiedDateTime(String modifiedDateTime) {
    this.modifiedDateTime = modifiedDateTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaseNote caseNote = (CaseNote) o;
    return Objects.equals(this.caseId, caseNote.caseId) &&
        Objects.equals(this.noteId, caseNote.noteId) &&
        Objects.equals(this.type, caseNote.type) &&
        Objects.equals(this.noteType, caseNote.noteType) &&
        Objects.equals(this.noteCreatedDate, caseNote.noteCreatedDate) &&
        Objects.equals(this.note, caseNote.note) &&
        Objects.equals(this.noteAuthor, caseNote.noteAuthor) &&
        Objects.equals(this.direction, caseNote.direction) &&
        Objects.equals(this.code, caseNote.code) &&
        Objects.equals(this.caller, caseNote.caller) &&
        Objects.equals(this.callee, caseNote.callee) &&
        Objects.equals(this.createdDateTime, caseNote.createdDateTime) &&
        Objects.equals(this.modifiedDateTime, caseNote.modifiedDateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caseId, noteId, type, noteType, noteCreatedDate, note, noteAuthor, direction, code, caller, callee, createdDateTime, modifiedDateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaseNote {\n");
    
    sb.append("    caseId: ").append(toIndentedString(caseId)).append("\n");
    sb.append("    noteId: ").append(toIndentedString(noteId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    noteType: ").append(toIndentedString(noteType)).append("\n");
    sb.append("    noteCreatedDate: ").append(toIndentedString(noteCreatedDate)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    noteAuthor: ").append(toIndentedString(noteAuthor)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    caller: ").append(toIndentedString(caller)).append("\n");
    sb.append("    callee: ").append(toIndentedString(callee)).append("\n");
    sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
    sb.append("    modifiedDateTime: ").append(toIndentedString(modifiedDateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

