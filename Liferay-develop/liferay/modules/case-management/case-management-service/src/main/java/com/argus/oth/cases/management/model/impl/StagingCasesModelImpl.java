/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.argus.oth.cases.management.model.impl;

import com.argus.oth.cases.management.model.StagingCases;
import com.argus.oth.cases.management.model.StagingCasesModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the StagingCases service. Represents a row in the &quot;OTH_StagingCases&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>StagingCasesModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StagingCasesImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see StagingCasesImpl
 * @generated
 */
public class StagingCasesModelImpl
	extends BaseModelImpl<StagingCases> implements StagingCasesModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a staging cases model instance should use the <code>StagingCases</code> interface instead.
	 */
	public static final String TABLE_NAME = "OTH_StagingCases";

	public static final Object[][] TABLE_COLUMNS = {
		{"stagingCaseId", Types.BIGINT}, {"createDate", Types.TIMESTAMP},
		{"externalCaseId", Types.VARCHAR}, {"externalClientPk", Types.VARCHAR},
		{"clientGroupId", Types.VARCHAR}, {"caseNumber", Types.VARCHAR},
		{"caseStartDate", Types.VARCHAR}, {"caseEndDate", Types.VARCHAR},
		{"memberId", Types.VARCHAR}, {"primaryDiagCode", Types.VARCHAR},
		{"primaryCode", Types.VARCHAR}, {"status", Types.VARCHAR},
		{"estimateEntryDate", Types.VARCHAR}, {"caseManager", Types.VARCHAR},
		{"consentReceivedDate", Types.VARCHAR}, {"medicalPlan", Types.VARCHAR},
		{"costEstimate", Types.VARCHAR}, {"lastUpdated", Types.VARCHAR},
		{"externalCreatedDate", Types.VARCHAR},
		{"chargedAmount", Types.VARCHAR}, {"paidAmount", Types.VARCHAR},
		{"repricedAmount", Types.VARCHAR}, {"savingsAmount", Types.VARCHAR},
		{"savingsPercent", Types.VARCHAR}, {"treatingPhysician", Types.VARCHAR},
		{"primaryFacility", Types.VARCHAR}, {"rowProcessed", Types.BOOLEAN}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("stagingCaseId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("externalCaseId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("externalClientPk", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("clientGroupId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("caseNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("caseStartDate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("caseEndDate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("memberId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("primaryDiagCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("primaryCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("estimateEntryDate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("caseManager", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("consentReceivedDate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("medicalPlan", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("costEstimate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lastUpdated", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("externalCreatedDate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("chargedAmount", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("paidAmount", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("repricedAmount", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("savingsAmount", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("savingsPercent", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("treatingPhysician", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("primaryFacility", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("rowProcessed", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE =
		"create table OTH_StagingCases (stagingCaseId LONG not null primary key,createDate DATE null,externalCaseId VARCHAR(75) null,externalClientPk VARCHAR(75) null,clientGroupId VARCHAR(75) null,caseNumber VARCHAR(75) null,caseStartDate VARCHAR(75) null,caseEndDate VARCHAR(75) null,memberId VARCHAR(75) null,primaryDiagCode VARCHAR(1000) null,primaryCode VARCHAR(1000) null,status VARCHAR(75) null,estimateEntryDate VARCHAR(75) null,caseManager VARCHAR(75) null,consentReceivedDate VARCHAR(75) null,medicalPlan VARCHAR(1000) null,costEstimate VARCHAR(75) null,lastUpdated VARCHAR(75) null,externalCreatedDate VARCHAR(75) null,chargedAmount VARCHAR(75) null,paidAmount VARCHAR(75) null,repricedAmount VARCHAR(75) null,savingsAmount VARCHAR(75) null,savingsPercent VARCHAR(75) null,treatingPhysician VARCHAR(1000) null,primaryFacility VARCHAR(1000) null,rowProcessed BOOLEAN)";

	public static final String TABLE_SQL_DROP = "drop table OTH_StagingCases";

	public static final String ORDER_BY_JPQL =
		" ORDER BY stagingCases.lastUpdated ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY OTH_StagingCases.lastUpdated ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final long EXTERNALCASEID_COLUMN_BITMASK = 1L;

	public static final long ROWPROCESSED_COLUMN_BITMASK = 2L;

	public static final long LASTUPDATED_COLUMN_BITMASK = 4L;

	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
		_entityCacheEnabled = entityCacheEnabled;
	}

	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
		_finderCacheEnabled = finderCacheEnabled;
	}

	public StagingCasesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _stagingCaseId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStagingCaseId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _stagingCaseId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return StagingCases.class;
	}

	@Override
	public String getModelClassName() {
		return StagingCases.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<StagingCases, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<StagingCases, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<StagingCases, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((StagingCases)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<StagingCases, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<StagingCases, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(StagingCases)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<StagingCases, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<StagingCases, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, StagingCases>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			StagingCases.class.getClassLoader(), StagingCases.class,
			ModelWrapper.class);

		try {
			Constructor<StagingCases> constructor =
				(Constructor<StagingCases>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<StagingCases, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<StagingCases, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<StagingCases, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<StagingCases, Object>>();
		Map<String, BiConsumer<StagingCases, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<StagingCases, ?>>();

		attributeGetterFunctions.put(
			"stagingCaseId", StagingCases::getStagingCaseId);
		attributeSetterBiConsumers.put(
			"stagingCaseId",
			(BiConsumer<StagingCases, Long>)StagingCases::setStagingCaseId);
		attributeGetterFunctions.put("createDate", StagingCases::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<StagingCases, Date>)StagingCases::setCreateDate);
		attributeGetterFunctions.put(
			"externalCaseId", StagingCases::getExternalCaseId);
		attributeSetterBiConsumers.put(
			"externalCaseId",
			(BiConsumer<StagingCases, String>)StagingCases::setExternalCaseId);
		attributeGetterFunctions.put(
			"externalClientPk", StagingCases::getExternalClientPk);
		attributeSetterBiConsumers.put(
			"externalClientPk",
			(BiConsumer<StagingCases, String>)
				StagingCases::setExternalClientPk);
		attributeGetterFunctions.put(
			"clientGroupId", StagingCases::getClientGroupId);
		attributeSetterBiConsumers.put(
			"clientGroupId",
			(BiConsumer<StagingCases, String>)StagingCases::setClientGroupId);
		attributeGetterFunctions.put("caseNumber", StagingCases::getCaseNumber);
		attributeSetterBiConsumers.put(
			"caseNumber",
			(BiConsumer<StagingCases, String>)StagingCases::setCaseNumber);
		attributeGetterFunctions.put(
			"caseStartDate", StagingCases::getCaseStartDate);
		attributeSetterBiConsumers.put(
			"caseStartDate",
			(BiConsumer<StagingCases, String>)StagingCases::setCaseStartDate);
		attributeGetterFunctions.put(
			"caseEndDate", StagingCases::getCaseEndDate);
		attributeSetterBiConsumers.put(
			"caseEndDate",
			(BiConsumer<StagingCases, String>)StagingCases::setCaseEndDate);
		attributeGetterFunctions.put("memberId", StagingCases::getMemberId);
		attributeSetterBiConsumers.put(
			"memberId",
			(BiConsumer<StagingCases, String>)StagingCases::setMemberId);
		attributeGetterFunctions.put(
			"primaryDiagCode", StagingCases::getPrimaryDiagCode);
		attributeSetterBiConsumers.put(
			"primaryDiagCode",
			(BiConsumer<StagingCases, String>)StagingCases::setPrimaryDiagCode);
		attributeGetterFunctions.put(
			"primaryCode", StagingCases::getPrimaryCode);
		attributeSetterBiConsumers.put(
			"primaryCode",
			(BiConsumer<StagingCases, String>)StagingCases::setPrimaryCode);
		attributeGetterFunctions.put("status", StagingCases::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<StagingCases, String>)StagingCases::setStatus);
		attributeGetterFunctions.put(
			"estimateEntryDate", StagingCases::getEstimateEntryDate);
		attributeSetterBiConsumers.put(
			"estimateEntryDate",
			(BiConsumer<StagingCases, String>)
				StagingCases::setEstimateEntryDate);
		attributeGetterFunctions.put(
			"caseManager", StagingCases::getCaseManager);
		attributeSetterBiConsumers.put(
			"caseManager",
			(BiConsumer<StagingCases, String>)StagingCases::setCaseManager);
		attributeGetterFunctions.put(
			"consentReceivedDate", StagingCases::getConsentReceivedDate);
		attributeSetterBiConsumers.put(
			"consentReceivedDate",
			(BiConsumer<StagingCases, String>)
				StagingCases::setConsentReceivedDate);
		attributeGetterFunctions.put(
			"medicalPlan", StagingCases::getMedicalPlan);
		attributeSetterBiConsumers.put(
			"medicalPlan",
			(BiConsumer<StagingCases, String>)StagingCases::setMedicalPlan);
		attributeGetterFunctions.put(
			"costEstimate", StagingCases::getCostEstimate);
		attributeSetterBiConsumers.put(
			"costEstimate",
			(BiConsumer<StagingCases, String>)StagingCases::setCostEstimate);
		attributeGetterFunctions.put(
			"lastUpdated", StagingCases::getLastUpdated);
		attributeSetterBiConsumers.put(
			"lastUpdated",
			(BiConsumer<StagingCases, String>)StagingCases::setLastUpdated);
		attributeGetterFunctions.put(
			"externalCreatedDate", StagingCases::getExternalCreatedDate);
		attributeSetterBiConsumers.put(
			"externalCreatedDate",
			(BiConsumer<StagingCases, String>)
				StagingCases::setExternalCreatedDate);
		attributeGetterFunctions.put(
			"chargedAmount", StagingCases::getChargedAmount);
		attributeSetterBiConsumers.put(
			"chargedAmount",
			(BiConsumer<StagingCases, String>)StagingCases::setChargedAmount);
		attributeGetterFunctions.put("paidAmount", StagingCases::getPaidAmount);
		attributeSetterBiConsumers.put(
			"paidAmount",
			(BiConsumer<StagingCases, String>)StagingCases::setPaidAmount);
		attributeGetterFunctions.put(
			"repricedAmount", StagingCases::getRepricedAmount);
		attributeSetterBiConsumers.put(
			"repricedAmount",
			(BiConsumer<StagingCases, String>)StagingCases::setRepricedAmount);
		attributeGetterFunctions.put(
			"savingsAmount", StagingCases::getSavingsAmount);
		attributeSetterBiConsumers.put(
			"savingsAmount",
			(BiConsumer<StagingCases, String>)StagingCases::setSavingsAmount);
		attributeGetterFunctions.put(
			"savingsPercent", StagingCases::getSavingsPercent);
		attributeSetterBiConsumers.put(
			"savingsPercent",
			(BiConsumer<StagingCases, String>)StagingCases::setSavingsPercent);
		attributeGetterFunctions.put(
			"treatingPhysician", StagingCases::getTreatingPhysician);
		attributeSetterBiConsumers.put(
			"treatingPhysician",
			(BiConsumer<StagingCases, String>)
				StagingCases::setTreatingPhysician);
		attributeGetterFunctions.put(
			"primaryFacility", StagingCases::getPrimaryFacility);
		attributeSetterBiConsumers.put(
			"primaryFacility",
			(BiConsumer<StagingCases, String>)StagingCases::setPrimaryFacility);
		attributeGetterFunctions.put(
			"rowProcessed", StagingCases::getRowProcessed);
		attributeSetterBiConsumers.put(
			"rowProcessed",
			(BiConsumer<StagingCases, Boolean>)StagingCases::setRowProcessed);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getStagingCaseId() {
		return _stagingCaseId;
	}

	@Override
	public void setStagingCaseId(long stagingCaseId) {
		_stagingCaseId = stagingCaseId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public String getExternalCaseId() {
		if (_externalCaseId == null) {
			return "";
		}
		else {
			return _externalCaseId;
		}
	}

	@Override
	public void setExternalCaseId(String externalCaseId) {
		_columnBitmask |= EXTERNALCASEID_COLUMN_BITMASK;

		if (_originalExternalCaseId == null) {
			_originalExternalCaseId = _externalCaseId;
		}

		_externalCaseId = externalCaseId;
	}

	public String getOriginalExternalCaseId() {
		return GetterUtil.getString(_originalExternalCaseId);
	}

	@Override
	public String getExternalClientPk() {
		if (_externalClientPk == null) {
			return "";
		}
		else {
			return _externalClientPk;
		}
	}

	@Override
	public void setExternalClientPk(String externalClientPk) {
		_externalClientPk = externalClientPk;
	}

	@Override
	public String getClientGroupId() {
		if (_clientGroupId == null) {
			return "";
		}
		else {
			return _clientGroupId;
		}
	}

	@Override
	public void setClientGroupId(String clientGroupId) {
		_clientGroupId = clientGroupId;
	}

	@Override
	public String getCaseNumber() {
		if (_caseNumber == null) {
			return "";
		}
		else {
			return _caseNumber;
		}
	}

	@Override
	public void setCaseNumber(String caseNumber) {
		_caseNumber = caseNumber;
	}

	@Override
	public String getCaseStartDate() {
		if (_caseStartDate == null) {
			return "";
		}
		else {
			return _caseStartDate;
		}
	}

	@Override
	public void setCaseStartDate(String caseStartDate) {
		_caseStartDate = caseStartDate;
	}

	@Override
	public String getCaseEndDate() {
		if (_caseEndDate == null) {
			return "";
		}
		else {
			return _caseEndDate;
		}
	}

	@Override
	public void setCaseEndDate(String caseEndDate) {
		_caseEndDate = caseEndDate;
	}

	@Override
	public String getMemberId() {
		if (_memberId == null) {
			return "";
		}
		else {
			return _memberId;
		}
	}

	@Override
	public void setMemberId(String memberId) {
		_memberId = memberId;
	}

	@Override
	public String getPrimaryDiagCode() {
		if (_primaryDiagCode == null) {
			return "";
		}
		else {
			return _primaryDiagCode;
		}
	}

	@Override
	public void setPrimaryDiagCode(String primaryDiagCode) {
		_primaryDiagCode = primaryDiagCode;
	}

	@Override
	public String getPrimaryCode() {
		if (_primaryCode == null) {
			return "";
		}
		else {
			return _primaryCode;
		}
	}

	@Override
	public void setPrimaryCode(String primaryCode) {
		_primaryCode = primaryCode;
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return "";
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@Override
	public String getEstimateEntryDate() {
		if (_estimateEntryDate == null) {
			return "";
		}
		else {
			return _estimateEntryDate;
		}
	}

	@Override
	public void setEstimateEntryDate(String estimateEntryDate) {
		_estimateEntryDate = estimateEntryDate;
	}

	@Override
	public String getCaseManager() {
		if (_caseManager == null) {
			return "";
		}
		else {
			return _caseManager;
		}
	}

	@Override
	public void setCaseManager(String caseManager) {
		_caseManager = caseManager;
	}

	@Override
	public String getConsentReceivedDate() {
		if (_consentReceivedDate == null) {
			return "";
		}
		else {
			return _consentReceivedDate;
		}
	}

	@Override
	public void setConsentReceivedDate(String consentReceivedDate) {
		_consentReceivedDate = consentReceivedDate;
	}

	@Override
	public String getMedicalPlan() {
		if (_medicalPlan == null) {
			return "";
		}
		else {
			return _medicalPlan;
		}
	}

	@Override
	public void setMedicalPlan(String medicalPlan) {
		_medicalPlan = medicalPlan;
	}

	@Override
	public String getCostEstimate() {
		if (_costEstimate == null) {
			return "";
		}
		else {
			return _costEstimate;
		}
	}

	@Override
	public void setCostEstimate(String costEstimate) {
		_costEstimate = costEstimate;
	}

	@Override
	public String getLastUpdated() {
		if (_lastUpdated == null) {
			return "";
		}
		else {
			return _lastUpdated;
		}
	}

	@Override
	public void setLastUpdated(String lastUpdated) {
		_columnBitmask = -1L;

		_lastUpdated = lastUpdated;
	}

	@Override
	public String getExternalCreatedDate() {
		if (_externalCreatedDate == null) {
			return "";
		}
		else {
			return _externalCreatedDate;
		}
	}

	@Override
	public void setExternalCreatedDate(String externalCreatedDate) {
		_externalCreatedDate = externalCreatedDate;
	}

	@Override
	public String getChargedAmount() {
		if (_chargedAmount == null) {
			return "";
		}
		else {
			return _chargedAmount;
		}
	}

	@Override
	public void setChargedAmount(String chargedAmount) {
		_chargedAmount = chargedAmount;
	}

	@Override
	public String getPaidAmount() {
		if (_paidAmount == null) {
			return "";
		}
		else {
			return _paidAmount;
		}
	}

	@Override
	public void setPaidAmount(String paidAmount) {
		_paidAmount = paidAmount;
	}

	@Override
	public String getRepricedAmount() {
		if (_repricedAmount == null) {
			return "";
		}
		else {
			return _repricedAmount;
		}
	}

	@Override
	public void setRepricedAmount(String repricedAmount) {
		_repricedAmount = repricedAmount;
	}

	@Override
	public String getSavingsAmount() {
		if (_savingsAmount == null) {
			return "";
		}
		else {
			return _savingsAmount;
		}
	}

	@Override
	public void setSavingsAmount(String savingsAmount) {
		_savingsAmount = savingsAmount;
	}

	@Override
	public String getSavingsPercent() {
		if (_savingsPercent == null) {
			return "";
		}
		else {
			return _savingsPercent;
		}
	}

	@Override
	public void setSavingsPercent(String savingsPercent) {
		_savingsPercent = savingsPercent;
	}

	@Override
	public String getTreatingPhysician() {
		if (_treatingPhysician == null) {
			return "";
		}
		else {
			return _treatingPhysician;
		}
	}

	@Override
	public void setTreatingPhysician(String treatingPhysician) {
		_treatingPhysician = treatingPhysician;
	}

	@Override
	public String getPrimaryFacility() {
		if (_primaryFacility == null) {
			return "";
		}
		else {
			return _primaryFacility;
		}
	}

	@Override
	public void setPrimaryFacility(String primaryFacility) {
		_primaryFacility = primaryFacility;
	}

	@Override
	public boolean getRowProcessed() {
		return _rowProcessed;
	}

	@Override
	public boolean isRowProcessed() {
		return _rowProcessed;
	}

	@Override
	public void setRowProcessed(boolean rowProcessed) {
		_columnBitmask |= ROWPROCESSED_COLUMN_BITMASK;

		if (!_setOriginalRowProcessed) {
			_setOriginalRowProcessed = true;

			_originalRowProcessed = _rowProcessed;
		}

		_rowProcessed = rowProcessed;
	}

	public boolean getOriginalRowProcessed() {
		return _originalRowProcessed;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, StagingCases.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public StagingCases toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, StagingCases>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StagingCasesImpl stagingCasesImpl = new StagingCasesImpl();

		stagingCasesImpl.setStagingCaseId(getStagingCaseId());
		stagingCasesImpl.setCreateDate(getCreateDate());
		stagingCasesImpl.setExternalCaseId(getExternalCaseId());
		stagingCasesImpl.setExternalClientPk(getExternalClientPk());
		stagingCasesImpl.setClientGroupId(getClientGroupId());
		stagingCasesImpl.setCaseNumber(getCaseNumber());
		stagingCasesImpl.setCaseStartDate(getCaseStartDate());
		stagingCasesImpl.setCaseEndDate(getCaseEndDate());
		stagingCasesImpl.setMemberId(getMemberId());
		stagingCasesImpl.setPrimaryDiagCode(getPrimaryDiagCode());
		stagingCasesImpl.setPrimaryCode(getPrimaryCode());
		stagingCasesImpl.setStatus(getStatus());
		stagingCasesImpl.setEstimateEntryDate(getEstimateEntryDate());
		stagingCasesImpl.setCaseManager(getCaseManager());
		stagingCasesImpl.setConsentReceivedDate(getConsentReceivedDate());
		stagingCasesImpl.setMedicalPlan(getMedicalPlan());
		stagingCasesImpl.setCostEstimate(getCostEstimate());
		stagingCasesImpl.setLastUpdated(getLastUpdated());
		stagingCasesImpl.setExternalCreatedDate(getExternalCreatedDate());
		stagingCasesImpl.setChargedAmount(getChargedAmount());
		stagingCasesImpl.setPaidAmount(getPaidAmount());
		stagingCasesImpl.setRepricedAmount(getRepricedAmount());
		stagingCasesImpl.setSavingsAmount(getSavingsAmount());
		stagingCasesImpl.setSavingsPercent(getSavingsPercent());
		stagingCasesImpl.setTreatingPhysician(getTreatingPhysician());
		stagingCasesImpl.setPrimaryFacility(getPrimaryFacility());
		stagingCasesImpl.setRowProcessed(isRowProcessed());

		stagingCasesImpl.resetOriginalValues();

		return stagingCasesImpl;
	}

	@Override
	public int compareTo(StagingCases stagingCases) {
		int value = 0;

		value = getLastUpdated().compareTo(stagingCases.getLastUpdated());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof StagingCases)) {
			return false;
		}

		StagingCases stagingCases = (StagingCases)obj;

		long primaryKey = stagingCases.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return _entityCacheEnabled;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return _finderCacheEnabled;
	}

	@Override
	public void resetOriginalValues() {
		StagingCasesModelImpl stagingCasesModelImpl = this;

		stagingCasesModelImpl._originalExternalCaseId =
			stagingCasesModelImpl._externalCaseId;

		stagingCasesModelImpl._originalRowProcessed =
			stagingCasesModelImpl._rowProcessed;

		stagingCasesModelImpl._setOriginalRowProcessed = false;

		stagingCasesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<StagingCases> toCacheModel() {
		StagingCasesCacheModel stagingCasesCacheModel =
			new StagingCasesCacheModel();

		stagingCasesCacheModel.stagingCaseId = getStagingCaseId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			stagingCasesCacheModel.createDate = createDate.getTime();
		}
		else {
			stagingCasesCacheModel.createDate = Long.MIN_VALUE;
		}

		stagingCasesCacheModel.externalCaseId = getExternalCaseId();

		String externalCaseId = stagingCasesCacheModel.externalCaseId;

		if ((externalCaseId != null) && (externalCaseId.length() == 0)) {
			stagingCasesCacheModel.externalCaseId = null;
		}

		stagingCasesCacheModel.externalClientPk = getExternalClientPk();

		String externalClientPk = stagingCasesCacheModel.externalClientPk;

		if ((externalClientPk != null) && (externalClientPk.length() == 0)) {
			stagingCasesCacheModel.externalClientPk = null;
		}

		stagingCasesCacheModel.clientGroupId = getClientGroupId();

		String clientGroupId = stagingCasesCacheModel.clientGroupId;

		if ((clientGroupId != null) && (clientGroupId.length() == 0)) {
			stagingCasesCacheModel.clientGroupId = null;
		}

		stagingCasesCacheModel.caseNumber = getCaseNumber();

		String caseNumber = stagingCasesCacheModel.caseNumber;

		if ((caseNumber != null) && (caseNumber.length() == 0)) {
			stagingCasesCacheModel.caseNumber = null;
		}

		stagingCasesCacheModel.caseStartDate = getCaseStartDate();

		String caseStartDate = stagingCasesCacheModel.caseStartDate;

		if ((caseStartDate != null) && (caseStartDate.length() == 0)) {
			stagingCasesCacheModel.caseStartDate = null;
		}

		stagingCasesCacheModel.caseEndDate = getCaseEndDate();

		String caseEndDate = stagingCasesCacheModel.caseEndDate;

		if ((caseEndDate != null) && (caseEndDate.length() == 0)) {
			stagingCasesCacheModel.caseEndDate = null;
		}

		stagingCasesCacheModel.memberId = getMemberId();

		String memberId = stagingCasesCacheModel.memberId;

		if ((memberId != null) && (memberId.length() == 0)) {
			stagingCasesCacheModel.memberId = null;
		}

		stagingCasesCacheModel.primaryDiagCode = getPrimaryDiagCode();

		String primaryDiagCode = stagingCasesCacheModel.primaryDiagCode;

		if ((primaryDiagCode != null) && (primaryDiagCode.length() == 0)) {
			stagingCasesCacheModel.primaryDiagCode = null;
		}

		stagingCasesCacheModel.primaryCode = getPrimaryCode();

		String primaryCode = stagingCasesCacheModel.primaryCode;

		if ((primaryCode != null) && (primaryCode.length() == 0)) {
			stagingCasesCacheModel.primaryCode = null;
		}

		stagingCasesCacheModel.status = getStatus();

		String status = stagingCasesCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			stagingCasesCacheModel.status = null;
		}

		stagingCasesCacheModel.estimateEntryDate = getEstimateEntryDate();

		String estimateEntryDate = stagingCasesCacheModel.estimateEntryDate;

		if ((estimateEntryDate != null) && (estimateEntryDate.length() == 0)) {
			stagingCasesCacheModel.estimateEntryDate = null;
		}

		stagingCasesCacheModel.caseManager = getCaseManager();

		String caseManager = stagingCasesCacheModel.caseManager;

		if ((caseManager != null) && (caseManager.length() == 0)) {
			stagingCasesCacheModel.caseManager = null;
		}

		stagingCasesCacheModel.consentReceivedDate = getConsentReceivedDate();

		String consentReceivedDate = stagingCasesCacheModel.consentReceivedDate;

		if ((consentReceivedDate != null) &&
			(consentReceivedDate.length() == 0)) {

			stagingCasesCacheModel.consentReceivedDate = null;
		}

		stagingCasesCacheModel.medicalPlan = getMedicalPlan();

		String medicalPlan = stagingCasesCacheModel.medicalPlan;

		if ((medicalPlan != null) && (medicalPlan.length() == 0)) {
			stagingCasesCacheModel.medicalPlan = null;
		}

		stagingCasesCacheModel.costEstimate = getCostEstimate();

		String costEstimate = stagingCasesCacheModel.costEstimate;

		if ((costEstimate != null) && (costEstimate.length() == 0)) {
			stagingCasesCacheModel.costEstimate = null;
		}

		stagingCasesCacheModel.lastUpdated = getLastUpdated();

		String lastUpdated = stagingCasesCacheModel.lastUpdated;

		if ((lastUpdated != null) && (lastUpdated.length() == 0)) {
			stagingCasesCacheModel.lastUpdated = null;
		}

		stagingCasesCacheModel.externalCreatedDate = getExternalCreatedDate();

		String externalCreatedDate = stagingCasesCacheModel.externalCreatedDate;

		if ((externalCreatedDate != null) &&
			(externalCreatedDate.length() == 0)) {

			stagingCasesCacheModel.externalCreatedDate = null;
		}

		stagingCasesCacheModel.chargedAmount = getChargedAmount();

		String chargedAmount = stagingCasesCacheModel.chargedAmount;

		if ((chargedAmount != null) && (chargedAmount.length() == 0)) {
			stagingCasesCacheModel.chargedAmount = null;
		}

		stagingCasesCacheModel.paidAmount = getPaidAmount();

		String paidAmount = stagingCasesCacheModel.paidAmount;

		if ((paidAmount != null) && (paidAmount.length() == 0)) {
			stagingCasesCacheModel.paidAmount = null;
		}

		stagingCasesCacheModel.repricedAmount = getRepricedAmount();

		String repricedAmount = stagingCasesCacheModel.repricedAmount;

		if ((repricedAmount != null) && (repricedAmount.length() == 0)) {
			stagingCasesCacheModel.repricedAmount = null;
		}

		stagingCasesCacheModel.savingsAmount = getSavingsAmount();

		String savingsAmount = stagingCasesCacheModel.savingsAmount;

		if ((savingsAmount != null) && (savingsAmount.length() == 0)) {
			stagingCasesCacheModel.savingsAmount = null;
		}

		stagingCasesCacheModel.savingsPercent = getSavingsPercent();

		String savingsPercent = stagingCasesCacheModel.savingsPercent;

		if ((savingsPercent != null) && (savingsPercent.length() == 0)) {
			stagingCasesCacheModel.savingsPercent = null;
		}

		stagingCasesCacheModel.treatingPhysician = getTreatingPhysician();

		String treatingPhysician = stagingCasesCacheModel.treatingPhysician;

		if ((treatingPhysician != null) && (treatingPhysician.length() == 0)) {
			stagingCasesCacheModel.treatingPhysician = null;
		}

		stagingCasesCacheModel.primaryFacility = getPrimaryFacility();

		String primaryFacility = stagingCasesCacheModel.primaryFacility;

		if ((primaryFacility != null) && (primaryFacility.length() == 0)) {
			stagingCasesCacheModel.primaryFacility = null;
		}

		stagingCasesCacheModel.rowProcessed = isRowProcessed();

		return stagingCasesCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<StagingCases, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<StagingCases, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<StagingCases, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((StagingCases)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<StagingCases, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<StagingCases, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<StagingCases, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((StagingCases)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, StagingCases>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private static boolean _entityCacheEnabled;
	private static boolean _finderCacheEnabled;

	private long _stagingCaseId;
	private Date _createDate;
	private String _externalCaseId;
	private String _originalExternalCaseId;
	private String _externalClientPk;
	private String _clientGroupId;
	private String _caseNumber;
	private String _caseStartDate;
	private String _caseEndDate;
	private String _memberId;
	private String _primaryDiagCode;
	private String _primaryCode;
	private String _status;
	private String _estimateEntryDate;
	private String _caseManager;
	private String _consentReceivedDate;
	private String _medicalPlan;
	private String _costEstimate;
	private String _lastUpdated;
	private String _externalCreatedDate;
	private String _chargedAmount;
	private String _paidAmount;
	private String _repricedAmount;
	private String _savingsAmount;
	private String _savingsPercent;
	private String _treatingPhysician;
	private String _primaryFacility;
	private boolean _rowProcessed;
	private boolean _originalRowProcessed;
	private boolean _setOriginalRowProcessed;
	private long _columnBitmask;
	private StagingCases _escapedModel;

}