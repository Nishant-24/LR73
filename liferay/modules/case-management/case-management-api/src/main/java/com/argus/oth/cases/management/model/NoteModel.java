/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.argus.oth.cases.management.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Note service. Represents a row in the &quot;OTH_Note&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.argus.oth.cases.management.model.impl.NoteModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.argus.oth.cases.management.model.impl.NoteImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Note
 * @generated
 */
@ProviderType
public interface NoteModel extends BaseModel<Note>, ShardedModel, StagedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a note model instance should use the {@link Note} interface instead.
	 */

	/**
	 * Returns the primary key of this note.
	 *
	 * @return the primary key of this note
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this note.
	 *
	 * @param primaryKey the primary key of this note
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this note.
	 *
	 * @return the uuid of this note
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this note.
	 *
	 * @param uuid the uuid of this note
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the note ID of this note.
	 *
	 * @return the note ID of this note
	 */
	public long getNoteId();

	/**
	 * Sets the note ID of this note.
	 *
	 * @param noteId the note ID of this note
	 */
	public void setNoteId(long noteId);

	/**
	 * Returns the group ID of this note.
	 *
	 * @return the group ID of this note
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this note.
	 *
	 * @param groupId the group ID of this note
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this note.
	 *
	 * @return the company ID of this note
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this note.
	 *
	 * @param companyId the company ID of this note
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this note.
	 *
	 * @return the create date of this note
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this note.
	 *
	 * @param createDate the create date of this note
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this note.
	 *
	 * @return the modified date of this note
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this note.
	 *
	 * @param modifiedDate the modified date of this note
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the case ID of this note.
	 *
	 * @return the case ID of this note
	 */
	public long getCaseId();

	/**
	 * Sets the case ID of this note.
	 *
	 * @param caseId the case ID of this note
	 */
	public void setCaseId(long caseId);

	/**
	 * Returns the external note ID of this note.
	 *
	 * @return the external note ID of this note
	 */
	public long getExternalNoteId();

	/**
	 * Sets the external note ID of this note.
	 *
	 * @param externalNoteId the external note ID of this note
	 */
	public void setExternalNoteId(long externalNoteId);

	/**
	 * Returns the type of this note.
	 *
	 * @return the type of this note
	 */
	@AutoEscape
	public String getType();

	/**
	 * Sets the type of this note.
	 *
	 * @param type the type of this note
	 */
	public void setType(String type);

	/**
	 * Returns the note type of this note.
	 *
	 * @return the note type of this note
	 */
	@AutoEscape
	public String getNoteType();

	/**
	 * Sets the note type of this note.
	 *
	 * @param noteType the note type of this note
	 */
	public void setNoteType(String noteType);

	/**
	 * Returns the text of this note.
	 *
	 * @return the text of this note
	 */
	@AutoEscape
	public String getText();

	/**
	 * Sets the text of this note.
	 *
	 * @param text the text of this note
	 */
	public void setText(String text);

	/**
	 * Returns the note create date of this note.
	 *
	 * @return the note create date of this note
	 */
	public Date getNoteCreateDate();

	/**
	 * Sets the note create date of this note.
	 *
	 * @param noteCreateDate the note create date of this note
	 */
	public void setNoteCreateDate(Date noteCreateDate);

	/**
	 * Returns the caller of this note.
	 *
	 * @return the caller of this note
	 */
	@AutoEscape
	public String getCaller();

	/**
	 * Sets the caller of this note.
	 *
	 * @param caller the caller of this note
	 */
	public void setCaller(String caller);

	/**
	 * Returns the callee of this note.
	 *
	 * @return the callee of this note
	 */
	@AutoEscape
	public String getCallee();

	/**
	 * Sets the callee of this note.
	 *
	 * @param callee the callee of this note
	 */
	public void setCallee(String callee);

	/**
	 * Returns the direction of this note.
	 *
	 * @return the direction of this note
	 */
	@AutoEscape
	public String getDirection();

	/**
	 * Sets the direction of this note.
	 *
	 * @param direction the direction of this note
	 */
	public void setDirection(String direction);

	/**
	 * Returns the code of this note.
	 *
	 * @return the code of this note
	 */
	@AutoEscape
	public String getCode();

	/**
	 * Sets the code of this note.
	 *
	 * @param code the code of this note
	 */
	public void setCode(String code);

	/**
	 * Returns the process status of this note.
	 *
	 * @return the process status of this note
	 */
	@AutoEscape
	public String getProcessStatus();

	/**
	 * Sets the process status of this note.
	 *
	 * @param processStatus the process status of this note
	 */
	public void setProcessStatus(String processStatus);

	/**
	 * Returns the failure description of this note.
	 *
	 * @return the failure description of this note
	 */
	@AutoEscape
	public String getFailureDescription();

	/**
	 * Sets the failure description of this note.
	 *
	 * @param failureDescription the failure description of this note
	 */
	public void setFailureDescription(String failureDescription);

	/**
	 * Returns the user ID of this note.
	 *
	 * @return the user ID of this note
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this note.
	 *
	 * @param userId the user ID of this note
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this note.
	 *
	 * @return the user uuid of this note
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this note.
	 *
	 * @param userUuid the user uuid of this note
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the note author of this note.
	 *
	 * @return the note author of this note
	 */
	@AutoEscape
	public String getNoteAuthor();

	/**
	 * Sets the note author of this note.
	 *
	 * @param noteAuthor the note author of this note
	 */
	public void setNoteAuthor(String noteAuthor);

	/**
	 * Returns the row processed of this note.
	 *
	 * @return the row processed of this note
	 */
	@AutoEscape
	public String getRowProcessed();

	/**
	 * Sets the row processed of this note.
	 *
	 * @param rowProcessed the row processed of this note
	 */
	public void setRowProcessed(String rowProcessed);

}