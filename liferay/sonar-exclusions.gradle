subprojects {
	pluginManager.withPlugin('java') {
		logger.info "[sonar-exclusions] 'java' plugin detected in ${project}"

		sonarqube {
			properties {
				// find files that will be excluded by content
				def generatedFiles = fileTree(project.projectDir).include("**/*.java")
				.files.findAll {
					it.text.contains("* @generated") ||
					it.text.contains("This file was generated by the JavaTM Architecture")
				}
				.collect { project.relativePath(it) }

				generatedFiles += ["**/acord/jaxb/**/*.java", "**/acord/xml/**/*.java"]
				generatedFiles += ["**/*Exception.java"]
				generatedFiles += ["**/node_modules/**"]

				def generatedFilesCoverage = fileTree(project.projectDir).include("**/*.java")
				.files.findAll {
					it.text.contains("@XmlRootElement") ||
					it.text.contains("@XmlElement")
				}
				.collect { project.relativePath(it) }

				generatedFilesCoverage += generatedFiles

				property "sonar.coverage.exclusions", generatedFilesCoverage
				property "sonar.exclusions", generatedFiles

				logger.info "[sonar-exclusions] Read SonarScanner properties for ${project} (exclusions)"
			}
		}
	}
}